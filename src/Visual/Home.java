package Visual;

import Data.Productos;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Home {
    private JPanel panel1;
    private JButton comprar;
    private JLabel producto1Label;
    private JLabel producto2Label;
    private JCheckBox cbProd7;
    private JPanel principal;
    private JLabel producto3Label;
    private JLabel producto4Label;
    private JLabel producto5Label;
    private JLabel producto6Label;
    private JLabel producto7Label;
    private JLabel producto8Label;
    private JCheckBox cbProd1;
    private JCheckBox cbProd2;
    private JCheckBox cbProd3;
    private JCheckBox cbProd4;
    private JCheckBox cbProd5;
    private JCheckBox cbProd6;
    private JCheckBox cbProd8;
    private JLabel dp1;
    private JLabel dp2;
    private JLabel dp3;
    private JLabel dp4;
    private JLabel dp5;
    private JLabel dp6;
    private JLabel dp7;
    private JLabel dp8;
    private static JFrame frame;
    private menu opciones;

    public Home() {
        {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
            $$$setupUI$$$();
        }
        frame = new JFrame("Home");
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        dp1.setText("Valor: " + Productos.getInventario()[0].getValor());
        dp2.setText("Valor: " + Productos.getInventario()[1].getValor());
        dp3.setText("Valor: " + Productos.getInventario()[2].getValor());
        dp4.setText("Valor: " + Productos.getInventario()[3].getValor());
        dp5.setText("Valor: " + Productos.getInventario()[4].getValor());
        dp6.setText("Valor: " + Productos.getInventario()[5].getValor());
        dp7.setText("Valor: " + Productos.getInventario()[6].getValor());
        dp8.setText("Valor: " + Productos.getInventario()[7].getValor());
        frame.add($$$getRootComponent$$$());
        frame.setVisible(true);

        comprar.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                frame.setVisible(false);
                CheckOut checkOut = new CheckOut();
                //abrir ventana checkout


            }
        });
        cbProd1.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    CheckOut.addToCart(1);
                    cbProd1.setText("SELECTED");
                } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                    CheckOut.removeFromCart(1);
                    cbProd1.setText("Seleccionar");
                }


            }
        });
        cbProd2.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    CheckOut.addToCart(2);
                    cbProd2.setText("SELECTED");
                } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                    CheckOut.removeFromCart(2);
                    cbProd2.setText("Seleccionar");
                }


            }
        });
        cbProd3.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    CheckOut.addToCart(3);
                    cbProd3.setText("SELECTED");
                } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                    CheckOut.removeFromCart(3);
                    cbProd3.setText("Seleccionar");
                }


            }
        });
        cbProd4.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    CheckOut.addToCart(4);
                    cbProd4.setText("SELECTED");
                } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                    CheckOut.removeFromCart(4);
                    cbProd4.setText("Seleccionar");
                }


            }
        });
        cbProd5.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    CheckOut.addToCart(5);
                    cbProd5.setText("SELECTED");
                } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                    CheckOut.removeFromCart(5);
                    cbProd5.setText("Seleccionar");
                }


            }
        });
        cbProd6.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    CheckOut.addToCart(6);
                    cbProd6.setText("SELECTED");
                } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                    CheckOut.removeFromCart(6);
                    cbProd6.setText("Seleccionar");
                }


            }
        });
        cbProd7.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    CheckOut.addToCart(7);
                    cbProd7.setText("SELECTED");
                } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                    CheckOut.removeFromCart(7);
                    cbProd7.setText("Seleccionar");
                }


            }
        });
        cbProd8.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    CheckOut.addToCart(8);
                    cbProd8.setText("SELECTED");
                } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                    CheckOut.removeFromCart(8);
                    cbProd8.setText("Seleccionar");
                }


            }
        });


        dp1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                String datos = Productos.getInventario()[0].menu();
                opciones = new menu(datos);
            }

        });
        dp2.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                String datos = Productos.getInventario()[1].menu();
                opciones = new menu(datos);
            }

        });
        dp3.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                String datos = Productos.getInventario()[2].menu();
                opciones = new menu(datos);
            }

        });
        dp4.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                String datos = Productos.getInventario()[3].menu();
                opciones = new menu(datos);
            }

        });
        dp5.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                String datos = Productos.getInventario()[4].menu();
                opciones = new menu(datos);
            }

        });
        dp6.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                String datos = Productos.getInventario()[5].menu();
                opciones = new menu(datos);
            }

        });
        dp7.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                String datos = Productos.getInventario()[6].menu();
                opciones = new menu(datos);
            }

        });
        dp8.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                String datos = Productos.getInventario()[7].menu();
                opciones = new menu(datos);
            }

        });
    }


    public static Home start() {
        return new Home();

    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        principal = new JPanel();
        principal.setLayout(new BorderLayout(0, 0));
        panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        principal.add(panel1, BorderLayout.CENTER);
        producto1Label = new JLabel();
        producto1Label.setText("Producto1");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(producto1Label, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel2.setBackground(new Color(-7104484));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel2, gbc);
        dp1 = new JLabel();
        dp1.setText("descripcion");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(dp1, gbc);
        producto2Label = new JLabel();
        producto2Label.setText("Producto2");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(producto2Label, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel3.setBackground(new Color(-7104484));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel3, gbc);
        dp2 = new JLabel();
        dp2.setText("descripcion");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(dp2, gbc);
        producto3Label = new JLabel();
        producto3Label.setText("Producto3");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(producto3Label, gbc);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel4.setBackground(new Color(-7104484));
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel4, gbc);
        dp3 = new JLabel();
        dp3.setText("descripcion");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(dp3, gbc);
        producto4Label = new JLabel();
        producto4Label.setText("Producto4");
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(producto4Label, gbc);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel5.setBackground(new Color(-7104484));
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel5, gbc);
        dp4 = new JLabel();
        dp4.setText("descripcion");
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(dp4, gbc);
        producto5Label = new JLabel();
        producto5Label.setText("Producto5");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(producto5Label, gbc);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel6.setBackground(new Color(-7104484));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel6, gbc);
        dp5 = new JLabel();
        dp5.setText("descripcion");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(dp5, gbc);
        producto6Label = new JLabel();
        producto6Label.setText("Producto6");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(producto6Label, gbc);
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel7.setBackground(new Color(-7104484));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel7, gbc);
        dp6 = new JLabel();
        dp6.setText("descripcion");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(dp6, gbc);
        producto7Label = new JLabel();
        producto7Label.setText("Producto7");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(producto7Label, gbc);
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel8.setBackground(new Color(-7104484));
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel8, gbc);
        dp7 = new JLabel();
        dp7.setText("descripcion");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(dp7, gbc);
        producto8Label = new JLabel();
        producto8Label.setText("Producto8");
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(producto8Label, gbc);
        final JPanel panel9 = new JPanel();
        panel9.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel9.setBackground(new Color(-7104484));
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel9, gbc);
        dp8 = new JLabel();
        dp8.setText("descripcion");
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(dp8, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer4, gbc);
        comprar = new JButton();
        comprar.setText("comprar");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 9;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(comprar, gbc);
        cbProd7 = new JCheckBox();
        cbProd7.setText("Seleccionar");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 8;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(cbProd7, gbc);
        cbProd8 = new JCheckBox();
        cbProd8.setText("Seleccionar");
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 8;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(cbProd8, gbc);
        cbProd6 = new JCheckBox();
        cbProd6.setText("Seleccionar");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 8;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(cbProd6, gbc);
        cbProd5 = new JCheckBox();
        cbProd5.setText("Seleccionar");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 8;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(cbProd5, gbc);
        cbProd1 = new JCheckBox();
        cbProd1.setEnabled(true);
        cbProd1.setSelected(false);
        cbProd1.setText("Seleccionar");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(cbProd1, gbc);
        cbProd2 = new JCheckBox();
        cbProd2.setText("Seleccionar");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(cbProd2, gbc);
        cbProd3 = new JCheckBox();
        cbProd3.setText("Seleccionar");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(cbProd3, gbc);
        cbProd4 = new JCheckBox();
        cbProd4.setText("Seleccionar");
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(cbProd4, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return principal;
    }

}
